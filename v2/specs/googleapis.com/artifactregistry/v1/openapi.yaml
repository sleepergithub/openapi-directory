openapi: 3.0.0
servers:
  - url: https://artifactregistry.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Artifact Registry API
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png
  x-origin:
    - format: google
      url: https://artifactregistry.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: artifactregistry
externalDocs:
  url: https://cloud.google.com/artifacts/docs/
tags:
  - name: operations
  - name: projects
paths:
  "/v1/{name}":
    delete:
      description: Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
      operationId: artifactregistry.operations.delete
      parameters:
        - description: The name of the operation resource to be deleted.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - operations
    get:
      description: Gets a repository.
      operationId: artifactregistry.projects.locations.repositories.get
      parameters:
        - description: Required. The name of the repository to retrieve.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Repository"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/{name}:cancel":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: artifactregistry.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelOperationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - operations
  "/v1/{parent}/dockerImages":
    get:
      description: Lists docker images.
      operationId: artifactregistry.projects.locations.repositories.dockerImages.list
      parameters:
        - description: Required. The name of the parent resource whose docker images will be listed.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The maximum number of artifacts to return.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from a previous list request, if any.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDockerImagesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/{parent}/repositories":
    get:
      description: Lists repositories.
      operationId: artifactregistry.projects.locations.repositories.list
      parameters:
        - description: Required. The name of the parent resource whose repositories will be listed.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The maximum number of repositories to return.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from a previous list request, if any.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRepositoriesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    AptArtifact:
      description: A detailed representation of an Apt artifact. Information in the record is derived from the archive's control file. See https://www.debian.org/doc/debian-policy/ch-controlfields.html
      properties:
        architecture:
          description: Output only. Operating system architecture of the artifact.
          readOnly: true
          type: string
        component:
          description: Output only. Repository component of the artifact.
          readOnly: true
          type: string
        controlFile:
          description: Output only. Contents of the artifact's control metadata file.
          format: byte
          readOnly: true
          type: string
        name:
          description: Output only. The Artifact Registry resource name of the artifact.
          readOnly: true
          type: string
        packageName:
          description: Output only. The Apt package name of the artifact.
          readOnly: true
          type: string
        packageType:
          description: Output only. An artifact is a binary or source package.
          enum:
            - PACKAGE_TYPE_UNSPECIFIED
            - BINARY
            - SOURCE
          readOnly: true
          type: string
      type: object
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
    DockerImage:
      description: "DockerImage represents a docker artifact. The following fields are returned as untyped metadata in the Version resource, using camelcase keys (i.e. metadata.imageSizeBytes): - imageSizeBytes - mediaType - buildTime"
      properties:
        buildTime:
          description: The time this image was built. This field is returned as the 'metadata.buildTime' field in the Version resource. The build time is returned to the client as an RFC 3339 string, which can be easily used with the JavaScript Date constructor and keeps the Version timestamps returned via OnePlatform consistent, as JSON marshals google.protobuf.Timestamp into an RFC 3339 string.
          format: google-datetime
          type: string
        imageSizeBytes:
          description: Calculated size of the image. This field is returned as the 'metadata.imageSizeBytes' field in the Version resource.
          format: int64
          type: string
        mediaType:
          description: Media type of this image, e.g. "application/vnd.docker.distribution.manifest.v2+json". This field is returned as the 'metadata.mediaType' field in the Version resource.
          type: string
        name:
          description: Required. registry_location, project_id, repository_name and image id forms a unique image name:`projects//locations//repository//dockerImages/`. For example, "projects/test-project/locations/us-west4/repositories/test-repo/dockerImages/ nginx@sha256:e9954c1fc875017be1c3e36eca16be2d9e9bccc4bf072163515467d6a823c7cf", where "us-west4" is the registry_location, "test-project" is the project_id, "test-repo" is the repository_name and "nginx@sha256:e9954c1fc875017be1c3e36eca16be2d9e9bccc4bf072163515467d6a823c7cf" is the image's digest.
          type: string
        tags:
          description: Tags attached to this image.
          items:
            type: string
          type: array
        uploadTime:
          description: Time the image was uploaded.
          format: google-datetime
          type: string
        uri:
          description: "Required. URL to access the image. Example: us-west4-docker.pkg.dev/test-project/test-repo/nginx@sha256:e9954c1fc875017be1c3e36eca16be2d9e9bccc4bf072163515467d6a823c7cf"
          type: string
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
      properties: {}
      type: object
    ImportAptArtifactsErrorInfo:
      description: Error information explaining why a package was not imported.
      properties:
        error:
          $ref: "#/components/schemas/Status"
          description: The detailed error status.
        gcsSource:
          $ref: "#/components/schemas/ImportAptArtifactsGcsSource"
          description: Google Cloud Storage location requested.
      type: object
    ImportAptArtifactsGcsSource:
      description: Google Cloud Storage location where the artifacts currently reside.
      properties:
        uris:
          description: Cloud Storage paths URI (e.g., gs://my_bucket//my_object).
          items:
            type: string
          type: array
        useWildcards:
          description: Supports URI wildcards for matching multiple objects from a single URI.
          type: boolean
      type: object
    ImportAptArtifactsResponse:
      description: The response message from importing artifacts.
      properties:
        aptArtifacts:
          description: The Apt artifacts updated.
          items:
            $ref: "#/components/schemas/AptArtifact"
          type: array
        errors:
          description: Detailed error info for packages that were not imported.
          items:
            $ref: "#/components/schemas/ImportAptArtifactsErrorInfo"
          type: array
      type: object
    ImportYumArtifactsErrorInfo:
      description: Error information explaining why a package was not imported.
      properties:
        error:
          $ref: "#/components/schemas/Status"
          description: The detailed error status.
        gcsSource:
          $ref: "#/components/schemas/ImportYumArtifactsGcsSource"
          description: Google Cloud Storage location requested.
      type: object
    ImportYumArtifactsGcsSource:
      description: Google Cloud Storage location where the artifacts currently reside.
      properties:
        uris:
          description: Cloud Storage paths URI (e.g., gs://my_bucket//my_object).
          items:
            type: string
          type: array
        useWildcards:
          description: Supports URI wildcards for matching multiple objects from a single URI.
          type: boolean
      type: object
    ImportYumArtifactsResponse:
      description: The response message from importing artifacts.
      properties:
        errors:
          description: Detailed error info for packages that were not imported.
          items:
            $ref: "#/components/schemas/ImportYumArtifactsErrorInfo"
          type: array
        yumArtifacts:
          description: The yum artifacts updated.
          items:
            $ref: "#/components/schemas/YumArtifact"
          type: array
      type: object
    ListDockerImagesResponse:
      description: The response from listing docker images.
      properties:
        dockerImages:
          description: The docker images returned.
          items:
            $ref: "#/components/schemas/DockerImage"
          type: array
        nextPageToken:
          description: The token to retrieve the next page of artifacts, or empty if there are no more artifacts to return.
          type: string
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Operation"
          type: array
      type: object
    ListRepositoriesResponse:
      description: The response from listing repositories.
      properties:
        nextPageToken:
          description: The token to retrieve the next page of repositories, or empty if there are no more repositories to return.
          type: string
        repositories:
          description: The repositories returned.
          items:
            $ref: "#/components/schemas/Repository"
          type: array
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        error:
          $ref: "#/components/schemas/Status"
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
      type: object
    Repository:
      description: A Repository for storing artifacts with a specific format.
      properties:
        createTime:
          description: The time when the repository was created.
          format: google-datetime
          type: string
        description:
          description: The user-provided description of the repository.
          type: string
        format:
          description: The format of packages that are stored in the repository.
          enum:
            - FORMAT_UNSPECIFIED
            - DOCKER
            - MAVEN
            - NPM
            - PYPI
            - APT
            - YUM
            - PYTHON
          type: string
        kmsKeyName:
          description: "The Cloud KMS resource name of the customer managed encryption key that’s used to encrypt the contents of the Repository. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. This value may not be changed after the Repository has been created."
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels with user-defined metadata. This field may contain up to 64 entries. Label keys and values may be no longer than 63 characters. Label keys must begin with a lowercase letter and may only contain lowercase letters, numeric characters, underscores, and dashes.
          type: object
        name:
          description: 'The name of the repository, for example: "projects/p1/locations/us-central1/repositories/repo1".'
          type: string
        updateTime:
          description: The time when the repository was last updated.
          format: google-datetime
          type: string
      type: object
    Status:
      description: "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    UploadAptArtifactMediaResponse:
      description: The response to upload an artifact.
      properties:
        operation:
          $ref: "#/components/schemas/Operation"
          description: Operation to be returned to the user.
      type: object
    UploadAptArtifactResponse:
      description: The response of the completed artifact upload operation. This response is contained in the Operation and available to users.
      properties:
        aptArtifacts:
          description: The Apt artifacts updated.
          items:
            $ref: "#/components/schemas/AptArtifact"
          type: array
      type: object
    UploadYumArtifactMediaResponse:
      description: The response to upload an artifact.
      properties:
        operation:
          $ref: "#/components/schemas/Operation"
          description: Operation to be returned to the user.
      type: object
    UploadYumArtifactResponse:
      description: The response of the completed artifact upload operation. This response is contained in the Operation and available to users.
      properties:
        yumArtifacts:
          description: The Apt artifacts updated.
          items:
            $ref: "#/components/schemas/YumArtifact"
          type: array
      type: object
    YumArtifact:
      description: A detailed representation of a Yum artifact.
      properties:
        architecture:
          description: Output only. Operating system architecture of the artifact.
          readOnly: true
          type: string
        name:
          description: Output only. The Artifact Registry resource name of the artifact.
          readOnly: true
          type: string
        packageName:
          description: Output only. The yum package name of the artifact.
          readOnly: true
          type: string
        packageType:
          description: Output only. An artifact is a binary or source package.
          enum:
            - PACKAGE_TYPE_UNSPECIFIED
            - BINARY
            - SOURCE
          readOnly: true
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data across Google Cloud services and see the email address of your Google Account
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data across Google Cloud services and see the email address of your Google Account
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
